$date
  Fri Feb 16 15:27:25 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module tb_vending $end
$var reg 1 ! ten $end
$var reg 1 " five $end
$var reg 1 # clk $end
$var reg 6 $ z[5:0] $end
$var reg 1 % tick_5 $end
$var reg 1 & tick_15 $end
$var reg 1 ' tick_40 $end
$var reg 1 ( done $end
$var reg 1 ) get_tick $end
$var reg 1 * reset $end
$scope module uut $end
$var reg 1 + ten $end
$var reg 1 , five $end
$var reg 1 - clk $end
$var reg 1 . tick_5 $end
$var reg 1 / tick_15 $end
$var reg 1 0 tick_40 $end
$var reg 1 1 done $end
$var reg 1 2 reset $end
$var reg 1 3 get_tick $end
$var reg 6 4 z[5:0] $end
$var reg 6 5 temp[5:0] $end
$var reg 6 6 result5[5:0] $end
$var reg 6 7 result10[5:0] $end
$var reg 6 8 sub5[5:0] $end
$var reg 6 9 sub15[5:0] $end
$var reg 6 : sub40[5:0] $end
$var reg 1 ; garbage $end
$var reg 1 < res $end
$scope module adder5 $end
$var reg 6 = x[5:0] $end
$var reg 6 > y[5:0] $end
$var reg 1 ? cin $end
$var reg 6 @ sum[5:0] $end
$var reg 1 A cout $end
$var reg 7 B si_carry[6:0] $end
$var reg 6 C si_sum[5:0] $end
$var reg 6 D c[5:0] $end
$scope module xor_for_inputs(0) $end
$upscope $end
$scope module xor_for_inputs(1) $end
$upscope $end
$scope module xor_for_inputs(2) $end
$upscope $end
$scope module xor_for_inputs(3) $end
$upscope $end
$scope module xor_for_inputs(4) $end
$upscope $end
$scope module xor_for_inputs(5) $end
$upscope $end
$scope module fulladder_for(0) $end
$scope module fulladder_portmap $end
$var reg 1 E a $end
$var reg 1 F b $end
$var reg 1 G cin $end
$var reg 1 H sum $end
$var reg 1 I cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(1) $end
$scope module fulladder_portmap $end
$var reg 1 J a $end
$var reg 1 K b $end
$var reg 1 L cin $end
$var reg 1 M sum $end
$var reg 1 N cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(2) $end
$scope module fulladder_portmap $end
$var reg 1 O a $end
$var reg 1 P b $end
$var reg 1 Q cin $end
$var reg 1 R sum $end
$var reg 1 S cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(3) $end
$scope module fulladder_portmap $end
$var reg 1 T a $end
$var reg 1 U b $end
$var reg 1 V cin $end
$var reg 1 W sum $end
$var reg 1 X cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(4) $end
$scope module fulladder_portmap $end
$var reg 1 Y a $end
$var reg 1 Z b $end
$var reg 1 [ cin $end
$var reg 1 \ sum $end
$var reg 1 ] cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(5) $end
$scope module fulladder_portmap $end
$var reg 1 ^ a $end
$var reg 1 _ b $end
$var reg 1 ` cin $end
$var reg 1 a sum $end
$var reg 1 b cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module adder10 $end
$var reg 6 c x[5:0] $end
$var reg 6 d y[5:0] $end
$var reg 1 e cin $end
$var reg 6 f sum[5:0] $end
$var reg 1 g cout $end
$var reg 7 h si_carry[6:0] $end
$var reg 6 i si_sum[5:0] $end
$var reg 6 j c[5:0] $end
$scope module xor_for_inputs(0) $end
$upscope $end
$scope module xor_for_inputs(1) $end
$upscope $end
$scope module xor_for_inputs(2) $end
$upscope $end
$scope module xor_for_inputs(3) $end
$upscope $end
$scope module xor_for_inputs(4) $end
$upscope $end
$scope module xor_for_inputs(5) $end
$upscope $end
$scope module fulladder_for(0) $end
$scope module fulladder_portmap $end
$var reg 1 k a $end
$var reg 1 l b $end
$var reg 1 m cin $end
$var reg 1 n sum $end
$var reg 1 o cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(1) $end
$scope module fulladder_portmap $end
$var reg 1 p a $end
$var reg 1 q b $end
$var reg 1 r cin $end
$var reg 1 s sum $end
$var reg 1 t cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(2) $end
$scope module fulladder_portmap $end
$var reg 1 u a $end
$var reg 1 v b $end
$var reg 1 w cin $end
$var reg 1 x sum $end
$var reg 1 y cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(3) $end
$scope module fulladder_portmap $end
$var reg 1 z a $end
$var reg 1 { b $end
$var reg 1 | cin $end
$var reg 1 } sum $end
$var reg 1 !" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(4) $end
$scope module fulladder_portmap $end
$var reg 1 "" a $end
$var reg 1 #" b $end
$var reg 1 $" cin $end
$var reg 1 %" sum $end
$var reg 1 &" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(5) $end
$scope module fulladder_portmap $end
$var reg 1 '" a $end
$var reg 1 (" b $end
$var reg 1 )" cin $end
$var reg 1 *" sum $end
$var reg 1 +" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module subber5 $end
$var reg 6 ," x[5:0] $end
$var reg 6 -" y[5:0] $end
$var reg 1 ." cin $end
$var reg 6 /" sum[5:0] $end
$var reg 1 0" cout $end
$var reg 7 1" si_carry[6:0] $end
$var reg 6 2" si_sum[5:0] $end
$var reg 6 3" c[5:0] $end
$scope module xor_for_inputs(0) $end
$upscope $end
$scope module xor_for_inputs(1) $end
$upscope $end
$scope module xor_for_inputs(2) $end
$upscope $end
$scope module xor_for_inputs(3) $end
$upscope $end
$scope module xor_for_inputs(4) $end
$upscope $end
$scope module xor_for_inputs(5) $end
$upscope $end
$scope module fulladder_for(0) $end
$scope module fulladder_portmap $end
$var reg 1 4" a $end
$var reg 1 5" b $end
$var reg 1 6" cin $end
$var reg 1 7" sum $end
$var reg 1 8" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(1) $end
$scope module fulladder_portmap $end
$var reg 1 9" a $end
$var reg 1 :" b $end
$var reg 1 ;" cin $end
$var reg 1 <" sum $end
$var reg 1 =" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(2) $end
$scope module fulladder_portmap $end
$var reg 1 >" a $end
$var reg 1 ?" b $end
$var reg 1 @" cin $end
$var reg 1 A" sum $end
$var reg 1 B" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(3) $end
$scope module fulladder_portmap $end
$var reg 1 C" a $end
$var reg 1 D" b $end
$var reg 1 E" cin $end
$var reg 1 F" sum $end
$var reg 1 G" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(4) $end
$scope module fulladder_portmap $end
$var reg 1 H" a $end
$var reg 1 I" b $end
$var reg 1 J" cin $end
$var reg 1 K" sum $end
$var reg 1 L" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(5) $end
$scope module fulladder_portmap $end
$var reg 1 M" a $end
$var reg 1 N" b $end
$var reg 1 O" cin $end
$var reg 1 P" sum $end
$var reg 1 Q" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module subber15 $end
$var reg 6 R" x[5:0] $end
$var reg 6 S" y[5:0] $end
$var reg 1 T" cin $end
$var reg 6 U" sum[5:0] $end
$var reg 1 V" cout $end
$var reg 7 W" si_carry[6:0] $end
$var reg 6 X" si_sum[5:0] $end
$var reg 6 Y" c[5:0] $end
$scope module xor_for_inputs(0) $end
$upscope $end
$scope module xor_for_inputs(1) $end
$upscope $end
$scope module xor_for_inputs(2) $end
$upscope $end
$scope module xor_for_inputs(3) $end
$upscope $end
$scope module xor_for_inputs(4) $end
$upscope $end
$scope module xor_for_inputs(5) $end
$upscope $end
$scope module fulladder_for(0) $end
$scope module fulladder_portmap $end
$var reg 1 Z" a $end
$var reg 1 [" b $end
$var reg 1 \" cin $end
$var reg 1 ]" sum $end
$var reg 1 ^" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(1) $end
$scope module fulladder_portmap $end
$var reg 1 _" a $end
$var reg 1 `" b $end
$var reg 1 a" cin $end
$var reg 1 b" sum $end
$var reg 1 c" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(2) $end
$scope module fulladder_portmap $end
$var reg 1 d" a $end
$var reg 1 e" b $end
$var reg 1 f" cin $end
$var reg 1 g" sum $end
$var reg 1 h" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(3) $end
$scope module fulladder_portmap $end
$var reg 1 i" a $end
$var reg 1 j" b $end
$var reg 1 k" cin $end
$var reg 1 l" sum $end
$var reg 1 m" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(4) $end
$scope module fulladder_portmap $end
$var reg 1 n" a $end
$var reg 1 o" b $end
$var reg 1 p" cin $end
$var reg 1 q" sum $end
$var reg 1 r" cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(5) $end
$scope module fulladder_portmap $end
$var reg 1 s" a $end
$var reg 1 t" b $end
$var reg 1 u" cin $end
$var reg 1 v" sum $end
$var reg 1 w" cout $end
$upscope $end
$upscope $end
$upscope $end
$scope module subber40 $end
$var reg 6 x" x[5:0] $end
$var reg 6 y" y[5:0] $end
$var reg 1 z" cin $end
$var reg 6 {" sum[5:0] $end
$var reg 1 |" cout $end
$var reg 7 }" si_carry[6:0] $end
$var reg 6 !# si_sum[5:0] $end
$var reg 6 "# c[5:0] $end
$scope module xor_for_inputs(0) $end
$upscope $end
$scope module xor_for_inputs(1) $end
$upscope $end
$scope module xor_for_inputs(2) $end
$upscope $end
$scope module xor_for_inputs(3) $end
$upscope $end
$scope module xor_for_inputs(4) $end
$upscope $end
$scope module xor_for_inputs(5) $end
$upscope $end
$scope module fulladder_for(0) $end
$scope module fulladder_portmap $end
$var reg 1 ## a $end
$var reg 1 $# b $end
$var reg 1 %# cin $end
$var reg 1 &# sum $end
$var reg 1 '# cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(1) $end
$scope module fulladder_portmap $end
$var reg 1 (# a $end
$var reg 1 )# b $end
$var reg 1 *# cin $end
$var reg 1 +# sum $end
$var reg 1 ,# cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(2) $end
$scope module fulladder_portmap $end
$var reg 1 -# a $end
$var reg 1 .# b $end
$var reg 1 /# cin $end
$var reg 1 0# sum $end
$var reg 1 1# cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(3) $end
$scope module fulladder_portmap $end
$var reg 1 2# a $end
$var reg 1 3# b $end
$var reg 1 4# cin $end
$var reg 1 5# sum $end
$var reg 1 6# cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(4) $end
$scope module fulladder_portmap $end
$var reg 1 7# a $end
$var reg 1 8# b $end
$var reg 1 9# cin $end
$var reg 1 :# sum $end
$var reg 1 ;# cout $end
$upscope $end
$upscope $end
$scope module fulladder_for(5) $end
$scope module fulladder_portmap $end
$var reg 1 <# a $end
$var reg 1 =# b $end
$var reg 1 ># cin $end
$var reg 1 ?# sum $end
$var reg 1 @# cout $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
0#
bUUUUUU $
0%
0&
0'
0(
U)
0*
0+
0,
0-
0.
0/
00
01
02
U3
bUUUUUU 4
b000000 5
b000101 6
b001010 7
b111011 8
b110001 9
b011000 :
0;
0<
b000000 =
b000101 >
0?
b000101 @
0A
b0000000 B
b000101 C
b000000 D
0E
1F
0G
1H
0I
0J
0K
0L
0M
0N
0O
1P
0Q
1R
0S
0T
0U
0V
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
b000000 c
b001010 d
0e
b001010 f
0g
b0000000 h
b001010 i
b000000 j
0k
0l
0m
0n
0o
0p
1q
0r
1s
0t
0u
0v
0w
0x
0y
0z
1{
0|
1}
0!"
0""
0#"
0$"
0%"
0&"
0'"
0("
0)"
0*"
0+"
b000101 ,"
b000000 -"
1."
b111011 /"
00"
b0000001 1"
b111011 2"
b111010 3"
04"
05"
16"
17"
08"
19"
0:"
0;"
1<"
0="
0>"
0?"
0@"
0A"
0B"
1C"
0D"
0E"
1F"
0G"
1H"
0I"
0J"
1K"
0L"
1M"
0N"
0O"
1P"
0Q"
b001111 R"
b000000 S"
1T"
b110001 U"
0V"
b0000001 W"
b110001 X"
b110000 Y"
0Z"
0["
1\"
1]"
0^"
0_"
0`"
0a"
0b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
0j"
0k"
0l"
0m"
1n"
0o"
0p"
1q"
0r"
1s"
0t"
0u"
1v"
0w"
b101000 x"
b000000 y"
1z"
b011000 {"
0|"
b0001111 }"
b011000 !#
b010111 "#
1##
0$#
1%#
0&#
1'#
1(#
0)#
1*#
0+#
1,#
1-#
0.#
1/#
00#
11#
02#
03#
14#
15#
06#
17#
08#
09#
1:#
0;#
0<#
0=#
0>#
0?#
0@#
#5000000
1!
1+
#10000000
1#
b000000 $
0)
1-
03
b000000 4
b001010 5
b001111 6
b010100 7
b000101 8
b111011 9
b100010 :
X;
b001010 =
b001111 @
XA
b001111 C
b001010 D
1J
1M
1T
1W
b001010 c
b010100 f
Xg
b0010100 h
b010100 i
b001010 j
1p
0s
1t
1w
1x
1z
0}
1!"
1$"
1%"
b001010 -"
b000101 /"
X0"
b1110101 1"
b000101 2"
1:"
0<"
1="
1@"
1A"
1D"
0F"
1G"
1J"
0K"
1L"
1O"
0P"
1Q"
b001010 S"
b111011 U"
XV"
b111011 X"
1`"
1b"
1j"
1l"
b001010 y"
b100010 {"
X|"
b0111111 }"
b100010 !#
1)#
1+#
13#
05#
16#
19#
0:#
1;#
1>#
1?#
#20000000
0#
0-
#25000000
0!
0+
#30000000
1#
1-
#35000000
1!
1+
#40000000
0#
0-
#50000000
1#
1-
b010100 5
b011001 6
b011110 7
b001111 8
b000101 9
b101100 :
b010100 =
b011001 @
XA
b0001000 B
b011001 C
b010100 D
0J
0M
1O
0R
1S
0T
1V
1W
1Y
1\
b010100 c
b011110 f
Xg
b0000000 h
b011110 i
b010100 j
0p
1s
0t
1u
0w
1x
0y
0z
0|
1}
0!"
1""
0$"
1%"
0&"
0)"
0*"
b010100 -"
b001111 /"
X0"
b1100001 1"
b001111 2"
0:"
1<"
0="
1?"
0@"
1A"
0B"
0D"
0E"
1F"
0G"
1I"
0J"
0K"
b010100 S"
b000101 U"
XV"
b1100001 W"
b000101 X"
0`"
0b"
1e"
1g"
0j"
0l"
1o"
0q"
1r"
1u"
0v"
1w"
b010100 y"
b101100 {"
X|"
b0101111 }"
b101100 !#
0)#
0+#
1.#
10#
03#
15#
06#
18#
09#
0:#
#55000000
0!
0+
#60000000
0#
0-
#70000000
1#
1-
#80000000
0#
0-
#85000000
1&
1/
#90000000
1#
1)
1-
13
b000101 5
b001010 6
b001111 7
b000000 8
b110110 9
b011101 :
X;
b000101 =
b001010 @
XA
b0001010 B
b001010 C
b000101 D
1E
0H
1I
1L
1M
0Y
0\
b000101 c
b001111 f
Xg
b001111 i
b000101 j
1k
1n
0""
0%"
b000101 -"
b000000 /"
X0"
b1111111 1"
b000000 2"
15"
07"
18"
1;"
0<"
1="
1@"
0A"
1B"
1E"
0F"
1G"
0I"
1J"
0K"
1L"
1O"
0P"
1Q"
b000101 S"
b110110 U"
XV"
b0000011 W"
b110110 X"
1["
0]"
1^"
1a"
1b"
0o"
1q"
0r"
0u"
1v"
0w"
b000101 y"
b011101 {"
X|"
b0001111 }"
b011101 !#
1$#
1&#
08#
1:#
0;#
0>#
0?#
#100000000
0#
0-
#105000000
0&
0/
#110000000
1#
0)
1-
03
#115000000
1(
11
#120000000
0#
0-
#130000000
1#
b000101 $
1-
b000101 4
1<
#140000000
0#
0-
#145000000
1!
0(
1+
01
#150000000
1#
b000000 $
1-
b000000 4
b000000 5
b000101 6
b001010 7
b111011 8
b110001 9
b011000 :
0;
0<
b000000 =
b000101 @
0A
b0000000 B
b000101 C
b000000 D
0E
1H
0I
0L
0M
0O
1R
0S
0V
0W
b000000 c
b001010 f
0g
b001010 i
b000000 j
0k
0n
0u
0x
b000000 -"
b111011 /"
00"
b0000001 1"
b111011 2"
05"
17"
08"
0;"
1<"
0="
0?"
0@"
0A"
0B"
0E"
1F"
0G"
0J"
1K"
0L"
0O"
1P"
0Q"
b000000 S"
b110001 U"
0V"
b0000001 W"
b110001 X"
0["
1]"
0^"
0a"
0b"
0e"
0g"
b000000 y"
b011000 {"
0|"
b011000 !#
0$#
0&#
0.#
00#
#160000000
0#
0-
#170000000
1#
1-
b001010 5
b001111 6
b010100 7
b000101 8
b111011 9
b100010 :
X;
b001010 =
b001111 @
XA
b001111 C
b001010 D
1J
1M
1T
1W
b001010 c
b010100 f
Xg
b0010100 h
b010100 i
b001010 j
1p
0s
1t
1w
1x
1z
0}
1!"
1$"
1%"
b001010 -"
b000101 /"
X0"
b1110101 1"
b000101 2"
1:"
0<"
1="
1@"
1A"
1D"
0F"
1G"
1J"
0K"
1L"
1O"
0P"
1Q"
b001010 S"
b111011 U"
XV"
b111011 X"
1`"
1b"
1j"
1l"
b001010 y"
b100010 {"
X|"
b0111111 }"
b100010 !#
1)#
1+#
13#
05#
16#
19#
0:#
1;#
1>#
1?#
#180000000
0!
1"
0#
0+
1,
0-
#190000000
1#
1-
b001111 5
b010100 6
b011001 7
b001010 8
b000000 9
b100111 :
b001111 =
b010100 @
XA
b0011110 B
b010100 C
b001111 D
1E
0H
1I
1L
0M
1N
1O
1Q
1R
1S
1V
0W
1X
1[
1\
b001111 c
b011001 f
Xg
b0011100 h
b011001 i
b001111 j
1k
1n
1u
0x
1y
1|
1}
b001111 -"
b001010 /"
X0"
b1111111 1"
b001010 2"
15"
07"
18"
1;"
1<"
1?"
0A"
1B"
1E"
1F"
b001111 S"
b000000 U"
XV"
b1111111 W"
b000000 X"
1["
0]"
1^"
1a"
0b"
1c"
1e"
1f"
0g"
1h"
1k"
0l"
1m"
1p"
0q"
1r"
1u"
0v"
1w"
b001111 y"
b100111 {"
X|"
b100111 !#
1$#
1&#
1.#
10#
#200000000
0#
0-
#210000000
0"
1#
1'
0,
1-
10
b010100 5
b011001 6
b011110 7
b001111 8
b000101 9
b101100 :
b010100 =
b011001 @
b0001000 B
b011001 C
b010100 D
0E
1H
0I
0J
0L
0M
0N
0Q
0R
0T
1W
0X
1Y
0[
1\
0]
0`
0a
b010100 c
b011110 f
b0000000 h
b011110 i
b010100 j
0k
0n
0p
1s
0t
0w
1x
0y
0z
0|
1}
0!"
1""
0$"
1%"
0&"
0)"
0*"
b010100 -"
b001111 /"
b1100001 1"
b001111 2"
05"
17"
08"
0:"
0;"
1<"
0="
0@"
1A"
0B"
0D"
0E"
1F"
0G"
1I"
0J"
0K"
b010100 S"
b000101 U"
b1100001 W"
b000101 X"
0["
1]"
0^"
0`"
0a"
0b"
0c"
0f"
1g"
0h"
0j"
0k"
0l"
0m"
1o"
0p"
0q"
b010100 y"
b101100 {"
b0101111 }"
b101100 !#
0$#
0&#
0)#
0+#
03#
15#
06#
18#
09#
0:#
#220000000
0#
0-
#230000000
1#
1-
#240000000
0#
1%
0'
0-
1.
00
#250000000
1#
1)
1-
13
b001111 5
b010100 6
b011001 7
b001010 8
b000000 9
b100111 :
X;
b001111 =
b010100 @
XA
b0011110 B
b010100 C
b001111 D
1E
0H
1I
1J
1L
0M
1N
1Q
1R
1T
0W
1X
0Y
1[
1\
b001111 c
b011001 f
Xg
b0011100 h
b011001 i
b001111 j
1k
1n
1p
0s
1t
1w
0x
1y
1z
1|
1}
1!"
0""
1$"
1%"
b001111 -"
b001010 /"
X0"
b1111111 1"
b001010 2"
15"
07"
18"
1:"
1;"
1<"
1="
1@"
0A"
1B"
1D"
1E"
1F"
1G"
0I"
1J"
0K"
1L"
1O"
0P"
1Q"
b001111 S"
b000000 U"
XV"
b1111111 W"
b000000 X"
1["
0]"
1^"
1`"
1a"
0b"
1c"
1f"
0g"
1h"
1j"
1k"
0l"
1m"
0o"
1p"
0q"
1r"
1u"
0v"
1w"
b001111 y"
b100111 {"
X|"
b0111111 }"
b100111 !#
1$#
1&#
1)#
1+#
13#
05#
16#
08#
19#
0:#
1;#
1>#
1?#
#260000000
0#
0-
#270000000
1#
0%
1-
0.
13
b001010 5
b001111 6
b010100 7
b000101 8
b111011 9
b100010 :
b001010 =
b001111 @
XA
b0000000 B
b001111 C
b001010 D
0E
1H
0I
0L
1M
0N
0O
0Q
1R
0S
0V
1W
0X
0[
0\
b001010 c
b010100 f
Xg
b0010100 h
b010100 i
b001010 j
0k
0n
0u
1x
0y
0|
0}
b001010 -"
b000101 /"
X0"
b1110101 1"
b000101 2"
05"
17"
08"
0;"
0<"
0?"
1A"
0B"
0E"
0F"
b001010 S"
b111011 U"
XV"
b0000001 W"
b111011 X"
0["
1]"
0^"
0a"
1b"
0c"
0e"
0f"
0g"
0h"
0k"
1l"
0m"
0p"
1q"
0r"
0u"
1v"
0w"
b001010 y"
b100010 {"
X|"
b100010 !#
0$#
0&#
0.#
00#
#280000000
0#
0-
#285000000
1(
11
#290000000
1#
b001010 $
0)
1-
03
b001010 4
1<
#300000000
0#
0-
#310000000
1#
b000000 $
1-
b000000 4
b000000 5
b000101 6
b001010 7
b111011 8
b110001 9
b011000 :
0;
b000000 =
b000101 @
0A
b000101 C
b000000 D
0J
0M
0T
0W
b000000 c
b001010 f
0g
b0000000 h
b001010 i
b000000 j
0p
1s
0t
0w
0x
0z
1}
0!"
0$"
0%"
b000000 -"
b111011 /"
00"
b0000001 1"
b111011 2"
0:"
1<"
0="
0@"
0A"
0D"
1F"
0G"
0J"
1K"
0L"
0O"
1P"
0Q"
b000000 S"
b110001 U"
0V"
b110001 X"
0`"
0b"
0j"
0l"
b000000 y"
b011000 {"
0|"
b0001111 }"
b011000 !#
0)#
0+#
03#
15#
06#
09#
1:#
0;#
0>#
0?#
#315000000
0(
01
#320000000
0#
0-
#330000000
1#
1-
0<
#340000000
0#
0-
#350000000
1#
1-
#360000000
0#
0-
#370000000
1#
1-
#380000000
0#
0-
#390000000
1#
1-
#400000000
0#
0-
#410000000
1#
1-
#420000000
0#
0-
#430000000
1#
1-
#440000000
0#
0-
#450000000
1#
1-
#460000000
0#
0-
#470000000
1#
1-
#480000000
0#
0-
#490000000
1#
1-
#500000000
0#
0-
